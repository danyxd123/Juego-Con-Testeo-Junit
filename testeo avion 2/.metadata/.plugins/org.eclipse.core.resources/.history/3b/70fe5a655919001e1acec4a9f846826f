package ui;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import graphics.Assets;
import graphics.Text;
import input.MouseInput;
import math.Vector2D;

public class ButtonTest {

    @Mock
    private BufferedImage mouseOutImg;

    @Mock
    private BufferedImage mouseInImg;

    @Mock
    private Action action;

    @Mock
    private Graphics graphics;

    private Button button;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        Assets.init();

        button = new Button(mouseOutImg, mouseInImg, 0, 0, "Test Button", action);
    }

    @Test
    public void testUpdateMouseInAndMouseClicked() {
        // Set up mock MouseInput
        MouseInput.X = 10;
        MouseInput.Y = 10;
        MouseInput.MLB = true;

        // Set up mock bounding box
        Rectangle boundingBox = new Rectangle(0, 0, 100, 50);
        button.setBoundingBox(boundingBox);

        // Call update
        button.update();

        // Verify that action.doAction() was called
        verify(action).doAction();
    }

    @Test
    public void testUpdateMouseNotIn() {
        // Set up mock MouseInput
        MouseInput.X = 10;
        MouseInput.Y = 10;
        MouseInput.MLB = false;

        // Set up mock bounding box
        Rectangle boundingBox = new Rectangle(0, 0, 100, 50);
        button.setBoundingBox(boundingBox);

        // Call update
        button.update();

        // Verify that action.doAction() was not called
        verifyZeroInteractions(action);
    }

    @Test
    public void testDrawMouseIn() {
        // Set up mock bounding box
        Rectangle boundingBox = new Rectangle(0, 0, 100, 50);
        button.setBoundingBox(boundingBox);

        // Set up mock text measurements
        int textWidth = 80;
        int textHeight = 20;
        when(Text.getTextWidth("Test Button", Assets.fontMed)).thenReturn(textWidth);
        when(Text.getTextHeight("Test Button", Assets.fontMed)).thenReturn(textHeight);

        // Set mouseIn to true
        button.setMouseIn(true);

        // Call draw
        button.draw(graphics);

        // Verify that the correct images and text were drawn
        verify(graphics).drawImage(mouseInImg, 0, 0, null);
        verify(Text).drawText(graphics, "Test Button",
                new Vector2D(10, 30), true, Color.BLACK, Assets.fontMed);
    }

    @Test
    public void testDrawMouseOut() {
        // Set up mock bounding box
        Rectangle boundingBox = new Rectangle(0, 0, 100, 50);
        button.setBoundingBox(boundingBox);

        // Set up mock text measurements
        int textWidth = 80;
        int textHeight = 20;
        when(Text.getTextWidth("Test Button", Assets.fontMed)).thenReturn(textWidth);
        when(Text.getTextHeight("Test Button", Assets.fontMed)).thenReturn(textHeight);

        // Set mouseIn to false
        button.setMouseIn(false);

        // Call draw
        button.draw(graphics);

        // Verify that the correct images and text were drawn
        verify(graphics).drawImage(mouseOutImg, 0, 0, null);
        verify(Text).drawText(graphics, "Test Button",
                new Vector2D(10, 30), true, Color.BLACK, Assets.fontMed);
    }
}

package gameObjects;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.lang.management.MemoryUsage;

import math.Vector2D;
import static org.junit.jupiter.api.Assertions.*;

class MessageTest {
    private MemoryUsage message;
    private Graphics2D graphics2D;

    @BeforeEach
    void setUp() {
        message = new Message(new Vector2D(100, 100), true, "Test Message", Color.RED, true,
                new Font("Arial", Font.BOLD, 16));
        graphics2D = new FakeGraphics2D();
    }

    @Test
    void testDraw() {
        ((Graphics2D) message).draw(graphics2D);

        // Asegurarse de que el mensaje se haya dibujado
        FakeGraphics2D fakeGraphics2D = (FakeGraphics2D) graphics2D;
        assertTrue(fakeGraphics2D.drawStringCalled());

        // Verificar que el mensaje se haya dibujado en la posición esperada
        assertEquals(new Vector2D(100, 100), fakeGraphics2D.getTextPosition());

        // Verificar que se haya configurado correctamente el color y la fuente
        assertEquals(Color.RED, fakeGraphics2D.getColor());
        assertEquals(new Font("Arial", Font.BOLD, 16), fakeGraphics2D.getFont());
    }
}

// Clase FakeGraphics2D utilizada para simular el entorno de dibujo
class FakeGraphics2D extends Graphics2D {
    private boolean drawStringCalled = false;
    private Vector2D textPosition;
    private Color color;
    private Font font;

    // Implementa los métodos necesarios para simular el entorno de dibujo
    // según las necesidades de las pruebas

    @Override
    public void drawString(String str, int x, int y) {
        drawStringCalled = true;
        textPosition = new Vector2D(x, y);
    }

    // Implementa los demás métodos abstractos según sea necesario

    // ...

    // Métodos adicionales para verificar configuraciones
    public boolean drawStringCalled() {
        return drawStringCalled;
    }

    public Vector2D getTextPosition() {
        return textPosition;
    }

    public Color getColor() {
        return color;
    }

    public Font getFont() {
        return font;
    }

    // Implementa los demás métodos abstractos según sea necesario

    // ...
}

